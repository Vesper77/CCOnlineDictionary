@model OnlineDiary.Models.CRUDViewModels.CreateUserViewModel

@{
    ViewBag.Title = "Новый пользователь";
}
<h2>Новый пользователь</h2>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.Label("Логин", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Пароль", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
           @Html.Label("Имя", htmlAttributes: new { @class = "control-label col-md-2" })
           <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Фамилия", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Отчество", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ParentName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ParentName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Email", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Роль", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Role, Model.Roles, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Role, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group" id="DropDownParents">
            @Html.Label("Родитель ученика", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(mo => mo.ParentId, new SelectList(Model.GetAllParent(), "Key", "Value"), new { @class = "form-control" })
                @Html.ValidationMessageFor(mo => mo.ParentId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group" id="DropDownClass">
            @Html.Label("Класс ученика", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.ClassId, new SelectList(Model.GetAllClass(), "Key", "Value"), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ClassId, "", new { @class = "text-danger" })
            </div>
        </div>
        @{
            var lessons = Model.GetNotBusyLessons();
        }
        <div class="form-group" id="CheckBoxLessons">
            @if (lessons.Count() != 0)
            {
                @Html.Label("Предметы", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @foreach (var item in lessons)
                    {
                        <input type="checkbox" name="LessonIds[]" value="@item.Id" class="checkbox-inline" />
                        @item.Title
                        <br />
                    }
                </div>
            }
            else
            {
                <div class="col-md-offset-2 col-md-10">
                    @Html.Label("Нет свободных предметов", htmlAttributes: new { @class = "text-danger" })
                </div>
            }
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Создать" class="btn btn-default" />
                @Html.ActionLink("Вернуться", "Index", null, new { @class = "btn btn-default" })
            </div>
        </div>
    </div>
}
@section Scripts{
    <script>
        $(function () {
            $("#DropDownParents").hide();
            $("#DropDownClass").hide();
            $("#CheckBoxLessons").hide();
            $("#SaveButton").hide();
            $(document).ready(function () {
                $("#Role").change(function () {
                    if ($(this).val() == "Выберите роль") {
                        $("#DropDownParents").hide();
                        $("#CheckBoxLessons").hide();
                        $("#DropDownClass").hide();
                        $("#SaveButton").hide();
                    }
                    if ($(this).val() == "admin") {
                        $("#DropDownParents").hide();
                        $("#CheckBoxLessons").hide();
                        $("#DropDownClass").hide();
                        $("#SaveButton").show();
                    }
                    if ($(this).val() == "parent") {
                        $("#DropDownParents").hide();
                        $("#DropDownClass").hide();
                        $("#CheckBoxLessons").hide();
                        $("#SaveButton").show();
                    }
                    if ($(this).val() == "children") {
                        $("#CheckBoxLessons").hide();
                        $("#DropDownParents").show();
                        $("#DropDownClass").show();
                        $("#SaveButton").show();
                    }
                    if ($(this).val() == "teacher") {
                        $("#DropDownParents").hide();
                        $("#CheckBoxLessons").show();
                        $("#DropDownClass").hide();
                        $("#SaveButton").show();
                    }
                });
            });
        });
</script>
}