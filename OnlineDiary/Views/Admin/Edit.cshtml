@model OnlineDiary.Models.CRUDViewModels.EditUserViewModel
@{
    ViewBag.Title = "Изменить";
}
<h2>Изменить</h2>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        <div class="form-group">
            @Html.Label("Логин", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Email", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Новый пароль", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.newPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.newPassword, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Фамилия", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Имя", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Отчество", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ParentName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ParentName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Роль", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Role, Model.Roles, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Role, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group" id="DropDownParents" @if (string.IsNullOrEmpty(Model.Role) || Model.Role != "children") { <text> style="display:none;" </text> }>
            @Html.Label("Родитель ученика", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(mo => mo.ParentId, new SelectList(Model.GetAllParent(), "Key", "Value"), new { @class = "form-control" })
                @Html.ValidationMessageFor(mo => mo.ParentId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group" id="DropDownClass" @if (string.IsNullOrEmpty(Model.Role) || Model.Role != "children") { <text> style="display:none;" </text>  }>
            @Html.Label("Класс ученика", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.ClassId, new SelectList(Model.GetAllClass(), "Key", "Value"), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ClassId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" id="CheckBoxLessons" @if (string.IsNullOrEmpty(Model.Role) || Model.Role != "teacher") { <text> style="display:none;" </text>  }>
            @Html.Label("Предметы", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-offset-2 col-md-10">
                @foreach (var item in Model.GetAllLessons(Model.Id))
                {
                    if (item.TeacherId == Model.Id)
                    {
                        <input type="checkbox" name="LessonIds[]" value="@item.Id" class="checkbox-inline" checked='checked' />
                    } else
                    {
                        <input type="checkbox" name="LessonIds[]" value="@item.Id" class="checkbox-inline" />
                    }
                    @item.Title
                    <br />
                }
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Сохранить" class="btn btn-primary" />
                @Html.ActionLink("Назад к списку", "Index", null, new { @class = "btn btn-default " })
            </div>
        </div>
    </div>
}



@section Scripts{
    <script>
        $(function () {
            //$("#DropDownParents").hide();
            //$("#DropDownClass").hide();
            //$("#CheckBoxLessons").hide();
            $(document).ready(function () {
                $("#Role").change(function () {
                    if ($(this).val() == "Выберите роль") {
                        $("#DropDownParents").hide();
                        $("#CheckBoxLessons").hide();
                        $("#DropDownClass").hide();
                    }
                    if ($(this).val() == "admin") {
                        $("#DropDownParents").hide();
                        $("#CheckBoxLessons").hide();
                        $("#DropDownClass").hide();
                    }
                    if ($(this).val() == "parent") {
                        $("#DropDownParents").hide();
                        $("#DropDownClass").hide();
                        $("#CheckBoxLessons").hide();
                    }
                    if ($(this).val() == "children") {
                        $("#CheckBoxLessons").hide();
                        $("#DropDownParents").show();
                        $("#DropDownClass").show();
                    }
                    if ($(this).val() == "teacher") {
                        $("#DropDownParents").hide();
                        $("#CheckBoxLessons").show();
                        $("#DropDownClass").hide();
                    }
                });
            });
        });
    </script>
}
<div>
    <br /><br /><br /><br />
</div>