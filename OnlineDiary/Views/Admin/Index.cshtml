@model OnlineDiary.Models.CRUDViewModels.IndexUserViewModel
@{
    ViewBag.Title = "Index";
}
<div class="page-header">
    @Html.ActionLink("Создать пользователя", "Create", new { }, new { @class = "btn btn-primary pull-right" })
    <h2>Список пользователей</h2>
</div>

@using (Html.BeginForm("Index", "Admin", FormMethod.Post)) {
    <div class="form-group">
        <div class="col-md-2 col-xs-5">
            @Html.DropDownListFor(model => Model.Role, Model.Roles, "Все",  new { @class = "form-control", id = "DropDownRoles" })
        </div>
        <input type="submit" value="Выбрать роль" class="btn btn-primary" />
    </div>
}
        
<div>
    <br />
    <table class="table">
         <thead>
             <tr>
                 <th>
                     <h3>ФИО</h3>
                 </th>
                 <th>
                     <h3>Роль</h3>                     
                 </th>
                @if (Model.Role == "children") {
                    <th><h3>Класс</h3></th>
                }
                 <th>
                     <h3>Действия</h3>                     
                 </th>
             </tr>
         </thead>
        <tbody>
            @foreach (var item in Model.GetAllUsersByRole(Model.Role)) {
                <tr>
                    <td class="tdIndex">
                        @Html.DisplayFor(model => item.FirstName)
                        @Html.DisplayFor(model => item.LastName)
                        @Html.DisplayFor(model => item.ParentName)
                    </td>
                    <td>
                        @{
                            var roleName = Model.GetRoleNameById(item.Id, true);
                            @Html.DisplayFor(modelItem => roleName)
                        }
                    </td>
                    @if (Model.Role == "children") {
                        <td>
                            @{
                                string className = Model.GetClassNameById(item.Id);
                            }
                            @Html.DisplayFor(model => className)
                        </td>
                                }
                    <td>
                        @Html.ActionLink("Изменить", "Edit", new { id = item.Id }) |
                        @Html.ActionLink("Информация", "Details", new { id = item.Id }) |
                        @Html.ActionLink("Удалить", "Delete", new { id = item.Id })
                    </td>
                </tr>
                                }
        </tbody>
    </table>
    <div style="text-align:center">
        <ul class="pagination" style="display:inline-block;">
            @for (int i = 0; i < Model.getCountAllPages(); i++) {
            if (Model.page == i) {
                    <li class="active">@Html.ActionLink((i + 1).ToString(), "Index", new { page = i })</li>
                } else {
                    <li>@Html.ActionLink((i + 1).ToString(), "Index", new { page = i })</li>
                }
            }
        </ul>
    </div>

    <br /><br />
</div>