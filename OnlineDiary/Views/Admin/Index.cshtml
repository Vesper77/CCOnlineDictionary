@model OnlineDiary.Models.CRUDViewModels.IndexUserViewModel
@{
    ViewBag.Title = "Index";
}
<div class="page-header">
    @Html.ActionLink("Create New", "Create", new { }, new { @class = "btn btn-primary pull-right" })
    <h2>Список пользователей</h2>
</div>
<div class="form-group">
    <div class="col-md-10">
        @using (Html.BeginForm("Index", "Admin", FormMethod.Post))
        {
            @Html.DropDownListFor(model => Model.Role, Model.Roles, "All", new { htmlAttributes = new { @class = "form-control", id = "DropDownRoles" } })
            <input type="submit" value="Select Role" class="btn btn-primary"/>
            <div>
                <br/>
                <table class="table">
                    @if (Model.Role == null) {
                        Model.Role = "all";
                    }
                    @foreach (var item in Model.GetAllUsersByRole(Model.Role))
                    {
                        <tr>
                            <td class="tdIndex">
                                @Html.DisplayFor(model => item.FirstName)
                                @Html.DisplayFor(model => item.LastName)
                                @Html.DisplayFor(model => item.ParentName)
                            </td>
                            <td>
                                @{
                                    var roleName = Model.GetRoleNameById(item.Id);
                                    @Html.DisplayFor(modelItem => roleName)
                                }
                            </td>
                            @if (Model.Role == "children")
                            {
                                <td>
                                    @{
                                        string className = Model.GetClassNameById(item.Id);
                                    }
                                    @Html.DisplayFor(model => className)
                                </td>
                            }
                            <td>
                                @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                                @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                                @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                            </td>
                        </tr>
                    }
                </table>
                <div style="text-align:center">
                    <ul class="pagination" style="display:inline-block;">
                        @for (int i = 0; i < Model.getCountAllPages(); i++)
                        {
                            if (Model.page == i)
                            {
                                <li class="active">@Html.ActionLink((i + 1).ToString(), "Index", new { page = i })</li>
                            }
                            else
                            {
                                <li>@Html.ActionLink((i + 1).ToString(), "Index", new { page = i })</li>
                            }
                        }
                    </ul>
                </div>
            </div>
        }
    </div>
</div>



@section Scripts{
    <script>
        $(function () {
            $(document).ready(function () {
                $("#AllUsers").show();
                $("#Role").change(function () {
                    if ($(this).val() == "all") {
                        $("#AllUsers").show();
                    }
                    if ($(this).val() == "admin") {
                        $("#AllUsers").hide();
                    }
                    if ($(this).val() == "parent") {
                        $("#AllUsers").hide();
                    }
                    if ($(this).val() == "teacher") {
                        $("#AllUsers").hide();
                    } if ($(this).val() == "children") {
                        $("#AllUsers").hide();
                    }
                });
            });
        });
</script>
}