@model OnlineDiary.Models.TeacherMarksViewModel
@{
    ViewBag.Title = "Оценки учеников";
    string[] quadmesters = new string[]
    {
        "первую ",
        "вторую ",
        "третью ",
        "четвертую "
    };
    var period = Model.GetPeriod();
    int cruancyCounter = 0;
}
<div>
    @Html.ActionLink("Оценки за предыдущий период", "TeacherMarks", new
    {
        LessonId = Model.form.LessonId,
        ClassId = Model.form.ClassId,
        quadmester = Model.quadmesterNumber == 1 ? 4 : Model.quadmesterNumber - 1,
        year = Model.quadmesterNumber == 1 ? Model.CurrentYear - 1 : Model.CurrentYear,
    }, new { @class="btn btn-primary"})
    @Html.ActionLink("Оценки за следующий период", "TeacherMarks", new
    {
        LessonId = Model.form.LessonId,
        ClassId = Model.form.ClassId,
        quadmester = Model.quadmesterNumber == 4 ? 1 : Model.quadmesterNumber + 1,
        year = Model.quadmesterNumber == 4 ? Model.CurrentYear + 1 : Model.CurrentYear,
    }, new { @class="btn btn-primary "})

    @using (Html.BeginForm("TeacherMarksPost", "Diary", FormMethod.Post, new { @class = "form-inline" }))
    {
        <div class="form-group">
            <label>Класс</label>
            @Html.DropDownList("classId", new SelectList(Model.getSchoolClasses(), "Key", "Value"), new { @class = "form-control", id="select-class"})
        </div>
        <div class="form-group">
            <label>Уроки</label>
            @Html.DropDownList("lessonId", new SelectList(Model.getLessons(), "Key", "Value"), new { @class = "form-control", id="select-lesson"})
        </div>
        <button type="submit" class="btn btn-primary">Показать</button>
    }

    <h2>Оценки учеников класса @(" " + Model.getClassName(Model.form.ClassId)) </h2>
    <h3>
      @("По предмету " + "\"" + Model.getLessonName(Model.form.LessonId) + "\""+ " за " +
      quadmesters[Model.quadmesterNumber - 1] + " четверть " + Model.CurrentYear + " - " + (Model.CurrentYear + 1) + "учебного  года")
    </h3>
    <div class="">
        @{ var days = Model.GetDays(Model.form.ClassId, Model.form.LessonId);}
        @if (Model.form != null && days.Count > 0)
        {
            <table class="table table table-bordered" style="font-size:10px;">
                <thead>
                    <tr>
                        <th class="b-mark_name">Ученик</th>
                        @for (DateTime date = period.Item1; date <= period.Item2; date = date.AddDays(1))
                        {
                            if (date.DayOfWeek != DayOfWeek.Sunday && days.Contains(date.DayOfWeek))
                            {
                                <th>@date.ToString("dd.MM")</th>
                            }
                        }
                        <th class="b-mark_name">Количество пропусков</th>
                        <th class="b-mark_name">Средняя оценка по предмету</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var children in Model.GetChildrensInClass(Model.form.ClassId))
                    {
                        int sumMarks = 0;
                        int marksCounter = 0;
                        cruancyCounter = 0;
                        <tr>
                            <td>
                                @children.FirstName
                            </td>
                            @for (DateTime date = period.Item1; date <= period.Item2; date = date.AddDays(1))
                            {
                                if (date.DayOfWeek != DayOfWeek.Sunday && days.Contains(date.DayOfWeek))
                                {
                                    int? val = Model.getMarkValue(date, Model.form.LessonId, children);
                                    if (val != null)
                                    {
                                        <td class="mark--set" data-mark-lesson="@Model.form.LessonId" data-mark-children="@children.Id" data-mark-date="@date.ToString()" >
                                            @val
                                        </td>
                                        sumMarks += (int)val;
                                        marksCounter++;
                                    }
                                    else if (Model.IsTruancyed(children.Id, Model.form.LessonId, date))
                                    {
                                        <td class="mark--set" data-mark-lesson="@Model.form.LessonId" data-mark-children="@children.Id" data-mark-date="@date.ToString()">
                                            Н
                                        </td>
                                        cruancyCounter++;
                                    }
                                    else
                                    {
                                        <td class="mark--set" data-mark-lesson="@Model.form.LessonId" data-mark-children="@children.Id" data-mark-date="@date.ToString()"></td>
                                    }
                                }
                            }
                            <td id="mark--cruancy">@cruancyCounter</td>
                            <td id="mark--total">@(((double)sumMarks / marksCounter).ToString("0.00"))</td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        else
        {
            <p>Нет данных</p>
        }
    </div>
</div>
@section Scripts{
    <script>
        window.urls = {
            setMark: '@Url.Action("SetMark", "Diary")',
            setTruancy: '@Url.Action("SetTruancy", "Diary")'
        };
    </script>
    @Scripts.Render("~/Scripts/marks.js");
}