@model OnlineDiary.Models.TeacherMarksViewModel
@{
    ViewBag.Title = "Оценки учеников";
    string[] quadmesters = new string[]
    {
        "первую ",
        "вторую ",
        "третью ",
        "четвертую "
    };
    var childrens = Model.GetChildrensInClass(Model.form.ClassId);
}
<div>
    <div class="page-header">
        <h2>Оценки учеников класса @(" " + Model.getClassName(Model.form.ClassId)) </h2>
        <h3>
            @("По предмету " + "\"" + Model.getLessonName(Model.form.LessonId) + "\"" + " за " +
      quadmesters[Model.quadmesterNumber - 1] + " четверть " + Model.CurrentYear + " - " + (Model.CurrentYear + 1) + "учебного  года")
        </h3>
    </div>
    @if (Model.quadmesterNumber > 1)
    {
        @Html.ActionLink("Оценки за предыдущую четверть", "TeacherMarks", new
        {
           LessonId = Model.form.LessonId,
           ClassId = Model.form.ClassId,
           quadmester = Model.quadmesterNumber - 1,
        }, new { @class = "btn btn-primary pull-left" })
    }
    @if (Model.quadmesterNumber < 4)
    {
        @Html.ActionLink("Оценки за следующую четверть", "TeacherMarks", new
        {
           LessonId = Model.form.LessonId,
           ClassId = Model.form.ClassId,
           quadmester = Model.quadmesterNumber + 1,
        }, new { @class = "btn btn-primary pull-right" })
    }
    <button class="btn btn-primary" id="saveMarks">
        Сохранить
    </button>
    @using (Html.BeginForm("TeacherMarksPost", "Diary", FormMethod.Post, new { @class = "form-inline" }))
    {
        if (Model.form.Classes.Count > 1)
        {
            <div class="form-group">
                <label>Класс</label>
                @Html.DropDownList("classId", new SelectList(Model.form.Classes, "Key", "Value"), new { @class = "form-control" })
            </div>
        }
        else if (Model.form.Classes.Count > 0)
        {
            <div class="form-group">
                <label>Класс: @(Model.form.Classes.First().Value)</label>
            </div>
        }
        if (Model.form.Lessons.Count > 1)
        {
            <div class="form-group">
                <label>Уроки</label>
                @Html.DropDownList("lessonId", new SelectList(Model.form.Lessons, "Key", "Value"), new { @class = "form-control" })
            </div>
        }
        else if (Model.form.Lessons.Count > 0)
        {
            <div class="form-group">
                <label>Предмет: @Model.form.Lessons.First().Value</label>
            </div>
        }
        if (Model.form.Classes.Count > 1 || Model.form.Lessons.Count > 1)
        {
            <button type="submit" class="btn btn-primary">Показать</button>
        }
    }
    <div class="">
        @{ var days = Model.marksModel.GetDays(Model.form.ClassId, Model.form.LessonId);}
        @if (Model.form != null && Model.Period != null && Model.Period.Item1 != null && Model.Period.Item2 != null &&
                     days.Count > 0 && Model.form.Classes.Count > 0 && Model.form.Lessons.Count > 0 && childrens.Count > 0)
        {
            int[] truancys = new int[childrens.Count];
            int[] summarks = new int[childrens.Count];
            int[] countmarks = new int[childrens.Count];
            if (Model.marksModel.TablesCounter == 0)
            {
                @CreateTable(Model.Period.Item1, Model.Period.Item2, truancys, summarks, countmarks, true, childrens, days)
            }
            else
            {
                <ul class="nav nav-tabs">
                    <li class="active"><a data-toggle="tab" href="#part1">Часть1</a></li>
                    @for (int i = 1; i < Model.marksModel.TablesCounter; i++)
                    {
                        <li><a data-toggle="tab" href="#part@(i + 1)">Часть@(i + 1)</a></li>
                    }
                </ul>
                <div class="tab-content">
                    <div id="part1" class="tab-pane active table-responsive">
                        @CreateTable(Model.Period.Item1, Model.marksModel.EndDates[0],
                                     truancys, summarks, countmarks, Model.marksModel.TablesCounter == 1, childrens, days)
                    </div>
                    @for (int i = 1; i < Model.marksModel.TablesCounter; i++)
                    {
                        <div id="part@(i + 1)" class="tab-pane table-responsive">
                            @CreateTable(Model.marksModel.EndDates[i - 1].AddDays(1), i == Model.marksModel.TablesCounter - 1 ?
                                           Model.Period.Item2 : Model.marksModel.EndDates[i],
                                           truancys, summarks, countmarks, i == Model.marksModel.TablesCounter - 1, childrens, days)
                        </div>
                    }
                </div>
            }
        }
        else
        {
            <p>Нет данных</p>
        }
    </div>
</div>
@section Scripts{
    <script>
        window.urls = {
            setMark: '@Url.Action("SetMark", "Diary")',
            setTruancy: '@Url.Action("SetTruancy", "Diary")'
        };
    </script>
    @Scripts.Render("~/Scripts/marks.js");
}

@helper CreateTable(DateTime start, DateTime end, int[] cryancys, int[] summarks, int[] countmarks, bool endTable, List<OnlineDiary.Models.DiaryUser> childrens, List<DayOfWeek> days)
{
    <table class="table table table-bordered" style="font-size:10px;">
        <thead>
            <tr>
                <th class="b-mark_name">Ученик</th>
                @for (DateTime date = start; date <= end; date = date.AddDays(1))
                {
                    if (date.DayOfWeek != DayOfWeek.Sunday && days.Contains(date.DayOfWeek))
                    {
                        <th>@date.ToString("dd.MM")</th>
                    }
                }
                @if (endTable)
                {
                    <th class="b-mark_name">Количество пропусков</th>
                    <th class="b-mark_name">Оценка за четверть</th>
                }
            </tr>
        </thead>
        <tbody>
            @foreach (var children in Model.GetChildrensInClass(Model.form.ClassId))
            {
                int sumMarks = 0;
                int marksCounter = 0;
                int cruancyCounter = 0;
                <tr>
                    <td>
                        @Model.GetUserName(children)
                    </td>
                    @for (DateTime date = start; date <= end; date = date.AddDays(1))
                    {
                        if (date.DayOfWeek != DayOfWeek.Sunday && days.Contains(date.DayOfWeek))
                        {
                            int? val = Model.getMarkValue(date, Model.form.LessonId, children);
                            if (val != null)
                            {
                                <td class="mark--set" data-mark-lesson="@Model.form.LessonId" data-mark-children="@children.Id" data-mark-date="@date.ToString()">
                                    @val
                                </td>
                                sumMarks += (int)val;
                                marksCounter++;
                            }
                            else if (Model.IsTruancyed(children.Id, Model.form.LessonId, date))
                            {
                                <td class="mark--set" data-mark-lesson="@Model.form.LessonId" data-mark-children="@children.Id" data-mark-date="@date.ToString()">
                                    Н
                                </td>
                                cruancyCounter++;
                            }
                            else
                            {
                                <td class="mark--set" data-mark-lesson="@Model.form.LessonId" data-mark-children="@children.Id" data-mark-date="@date.ToString()"></td>
                            }
                        }
                    }
                    @if (endTable)
                    {
                        <td id="mark--cruancy">@cruancyCounter</td>
                        if (marksCounter > 0)
                        {
                            <td id="mark--total">@((int)Math.Round((double)sumMarks / marksCounter, MidpointRounding.AwayFromZero))</td>
                        }
                        else
                        {
                            <td id="mark--total">0</td>
                        }
                    }
                </tr>
            }
        </tbody>
    </table>
}